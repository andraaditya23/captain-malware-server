from api import app
from flask import request, render_template
import os
import uuid
import yara
import yaml
import time
from api.emailalert import read_yaml_file

malware_batch_list = {}

# Define a directory with your rule files
rule_dir = "./signature-base/yara"

# Create a dictionary with your rule names and file paths
rule_dict = {f: os.path.join(rule_dir, f) for f in os.listdir(rule_dir) if f.endswith('.yar')}

# Compile all rules
rules = yara.compile(filepaths=rule_dict)

def write_to_yaml(admin_emails, malware_type, current_dir, timestamp):
    # Read the existing data from the YAML file
    existing_data = read_yaml_file('./batch/detected-list.yaml')

    for admin_email in admin_emails:
        # Check if the admin_email exists in the existing data
        if admin_email in existing_data:
            # Append the new entry to the existing key's list
            existing_data[admin_email].append({
                'timestamp': timestamp,
                'malware_type': malware_type,
                'filepath': current_dir
            })
        else:
            # Create a new key and value for the admin_email
            existing_data[admin_email] = [{
                'timestamp': timestamp,
                'malware_type': malware_type,
                'filepath': current_dir
            }]

    # Write the updated data back to the YAML file
    with open('./batch/detected-list.yaml', 'w') as yaml_file:
        yaml.dump(existing_data, yaml_file)

@app.route('/', methods=['GET'])
def health_check():
    message = "API Service for Captain Malware - Malware Detection with YARA Python"
    return render_template('index.html', message=message)

@app.route('/retrievefile', methods=['GET'])
def retrieve_file():
    message = "API Service for Captain Malware - Malware Detection with YARA Python"
    return render_template('retrieve.html', message=message)

@app.route('/yaradetect', methods=['POST'])
def yara_detect_malware():
    # from api.emailalert import send_email  # Import the send_email function
    timestamp = time.strftime('%Y-%m-%d %H:%M:%S')
    
    if 'file' not in request.files:
        return 'No file detected', 400

    file = request.files['file']
    if file.filename == '':
        return 'No file selected', 400
    
    current_dir = request.form.get('current_dir', '')  # Get the current_dir from form data
    if not current_dir:
        return 'No current_dir provided', 400

    # Create the "uploads" directory if it doesn't exist
    if not os.path.exists('uploads'):
        os.makedirs('uploads')

    print(file)
    print(type(file))

    admin_emails = request.form.getlist('admin_email')  # Get the admin_email list from form data

   # Save the uploaded file 
    unique_filename = str(uuid.uuid4()) + os.path.splitext(file.filename)[1]  # Generate a unique file name
    file_path = os.path.join('uploads', unique_filename)  # Path to save the uploaded file
    file.save(file_path)

    # Perform YARA detection
    matches = rules.match(filepath=file_path)

    if matches:
        malware_type = ", ".join(match.rule for match in matches)
        result = f"Malware detected! Detected types: {malware_type}"
        write_to_yaml(admin_emails, malware_type, current_dir, timestamp)
    else:
        result = "No malware detected."

    # print(file)
    try:
        # Remove the uploaded file after scanning
        os.remove(file_path)
    except Exception as e:
        print(f"An error occurred: {e}")

    return result
